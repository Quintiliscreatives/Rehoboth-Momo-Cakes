{
  "info": {
    "name": "Momo Cakes - Products Module Tests",
    "description": "Complete test suite for Products Module API endpoints - Import this JSON into Postman to test all endpoints automatically",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001"
    },
    {
      "key": "adminToken",
      "value": ""
    },
    {
      "key": "productId",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "1. Create Admin User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"fullName\": \"Test Admin\",\n  \"email\": \"admin@momocakes.com\",\n  \"phoneNumber\": \"07012345678\",\n  \"address\": \"123 Test Street, Lagos\",\n  \"age\": 30,\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/register",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "register"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (responseCode.code === 201 && pm.response.json().accessToken) {",
              "    pm.collectionVariables.set('adminToken', pm.response.json().accessToken);",
              "    console.log('Admin token saved');",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "2. Login Admin (if exists)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"admin@momocakes.com\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (responseCode.code === 200 && pm.response.json().accessToken) {",
              "    pm.collectionVariables.set('adminToken', pm.response.json().accessToken);",
              "    console.log('Admin logged in, token saved');",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "3. Get Products (Empty)",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/products",
          "host": ["{{baseUrl}}"],
          "path": ["products"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Returns empty array initially', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.be.an('array').that.is.empty;",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "4. Create Product (Admin)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Golden Delight Cake\",\n  \"price\": 5200,\n  \"description\": \"A delicious golden cake perfect for celebrations\",\n  \"quantityAvailable\": 25\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/products",
          "host": ["{{baseUrl}}"],
          "path": ["products"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Product created successfully', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "if (responseCode.code === 201) {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set('productId', jsonData.data._id);",
              "    console.log('Product ID saved: ' + jsonData.data._id);",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "5. Get Products (With Data)",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/products",
          "host": ["{{baseUrl}}"],
          "path": ["products"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Returns product array', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.be.an('array').that.is.not.empty;",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "6. Get Single Product",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/products/{{productId}}",
          "host": ["{{baseUrl}}"],
          "path": ["products", "{{productId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Product retrieved successfully', function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('name');",
              "    pm.expect(jsonData.data).to.have.property('price');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "7. Get Admin Stats",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/products/admin/stats",
          "host": ["{{baseUrl}}"],
          "path": ["products", "admin", "stats"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Admin stats retrieved', function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('totalProducts');",
              "    pm.expect(jsonData.data).to.have.property('activeProducts');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "8. Update Product",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"price\": 5500,\n  \"description\": \"A delicious golden cake perfect for celebrations - UPDATED!\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/products/{{productId}}",
          "host": ["{{baseUrl}}"],
          "path": ["products", "{{productId}}"]
        }
      }
    },
    {
      "name": "9. Update Quantity",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"quantityAvailable\": 30\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/products/{{productId}}/quantity",
          "host": ["{{baseUrl}}"],
          "path": ["products", "{{productId}}", "quantity"]
        }
      }
    },
    {
      "name": "10. Increment Quantity",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"quantity\": 5\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/products/{{productId}}/increment-quantity",
          "host": ["{{baseUrl}}"],
          "path": ["products", "{{productId}}", "increment-quantity"]
        }
      }
    },
    {
      "name": "11. Test Unauthorized Access",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Unauthorized Product\",\n  \"price\": 1000,\n  \"quantityAvailable\": 5\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/products",
          "host": ["{{baseUrl}}"],
          "path": ["products"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Unauthorized access blocked', function () {",
              "    pm.response.to.have.status(401);",
              "});"
            ]
          }
        }
      ]
    }
  ]
}